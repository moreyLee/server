<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7082d34d-43f0-45e9-8831-71bf703edcef" name="Changes" comment="pipeline">
      <change afterPath="$PROJECT_DIR$/model/cloudflare/cloudflare.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/model/jenkins/jenkins.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/plugin/cron/cron.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/faker_data_game_record.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources.local.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.local.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/sqldialects.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/sqldialects.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/v1/jenkins/jenkinsApi.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/v1/jenkins/jenkinsApi.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/v1/system/sys_domain.go" beforeDir="false" afterPath="$PROJECT_DIR$/api/v1/system/sys_domain.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/config.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/initialize/timer.go" beforeDir="false" afterPath="$PROJECT_DIR$/initialize/timer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/InsertJK_view_Mysql.go" beforeDir="false" afterPath="$PROJECT_DIR$/task/InsertJK_view_Mysql.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/execCMD.go" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="package.json" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.3.darwin-arm64" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;moreyLee&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/moreyLee/server.git&quot;,
    &quot;accountId&quot;: &quot;4122fec9-9d17-4ca6-8af0-9b6dd9a184bf&quot;
  }
}</component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/task/JenkinsAPI.go" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2fakrSEZTHCuHADZjNFCDpYNzQ2" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="autoscrollToSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="openDirectoriesWithSingleClick" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "ASKED_MARK_IGNORED_FILES_AS_EXCLUDED": "true",
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "DefaultGoTemplateProperty": "Go File",
    "Go Build.go build TestOCR.go (1).executor": "Run",
    "Go Build.go build TestOCR.go.executor": "Run",
    "Go Build.go build github.com/flipped-aurora/gin-vue-admin/server.executor": "Run",
    "Go Build.go build github.com/flipped-aurora/gin-vue-admin/server/test (1).executor": "Run",
    "Go Build.go build github.com/flipped-aurora/gin-vue-admin/server/test (2).executor": "Run",
    "Go Build.go build github.com/flipped-aurora/gin-vue-admin/server/test.executor": "Run",
    "Go Build.go build github.com/flipped-aurora/gin-vue-admin/server/utils/cgmanageTest.executor": "Run",
    "Go Build.go build qingstor_func.go.executor": "Run",
    "Go Build.go build selenium.go.executor": "Run",
    "Go Build.go build sendMessage.go (1).executor": "Run",
    "Go Build.go build sendMessage.go.executor": "Run",
    "Go Build.go build telegram.go.executor": "Run",
    "Go Build.go build telegram_polling.go.executor": "Run",
    "Go Build.go build telegramwebhook.go.executor": "Run",
    "Go Build.go build testTelegram.go.executor": "Run",
    "Go 构建.go build InsertJK_view_Mysql.go.executor": "Run",
    "Go 构建.go build InsertSiteName_mysql.go.executor": "Run",
    "Go 构建.go build ces.go.executor": "Run",
    "Go 构建.go build github.com/flipped-aurora/gin-vue-admin/server.executor": "Run",
    "Go 构建.go build github.com/flipped-aurora/gin-vue-admin/server/task.executor": "Run",
    "Go 构建.go build github.com/flipped-aurora/gin-vue-admin/server/test.executor": "Run",
    "Go 构建.go build github.com/flipped-aurora/gin-vue-admin/server/utils/cg (1).executor": "Run",
    "Go 构建.go build github.com/flipped-aurora/gin-vue-admin/server/utils/cg.executor": "Run",
    "Go 构建.go build telegramwebhook.go.executor": "Run",
    "Go 构建.go build text_webhook.go.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.automatic.dependencies.download": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "dart.analysis.tool.window.visible": "false",
    "git-widget-placeholder": "dev 上的 #1",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/Users/david/Downloads/projects/server",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.stylelint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.stylelint": "",
    "nodejs_package_manager_path": "npm",
    "service.view.auto.scroll.to.source": "true",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "mysql"
    ],
    "com.intellij.ide.scratch.LRUPopupBuilder$1/SQL Dialect": [
      "MySQL"
    ],
    "com.intellij.ide.scratch.LRUPopupBuilder$1/SQL 方言": [
      "MySQL"
    ],
    "com.intellij.ide.scratch.ScratchImplUtil$2/新建临时文件": [
      "yaml"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/model/cloudflare" />
      <recent name="$PROJECT_DIR$" />
      <recent name="D:\projects\server\task" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/task" />
      <recent name="$PROJECT_DIR$/pipeline/deploy" />
      <recent name="$PROJECT_DIR$/pipeline/build" />
      <recent name="$PROJECT_DIR$" />
      <recent name="D:\projects\server\test" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="GoApplicationRunConfiguration" />
        <option value="js.build_tools.npm" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Go 构建.go build github.com/flipped-aurora/gin-vue-admin/server/test">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="server" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/flipped-aurora/gin-vue-admin/server" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/flipped-aurora/gin-vue-admin/server" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="server" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/flipped-aurora/gin-vue-admin/server" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/flipped-aurora/gin-vue-admin/server/test" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="server" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="github.com/flipped-aurora/gin-vue-admin/server/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/test/faker_data_game_record.go" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go 构建.go build github.com/flipped-aurora/gin-vue-admin/server/test" />
        <item itemvalue="Go 构建.go build github.com/flipped-aurora/gin-vue-admin/server" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-e0158606a674-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.18968.32" />
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-GO-241.18968.32" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="OPEN_GENERIC_TABS">
      <map>
        <entry key="5711c39d-b7a4-4c9f-963f-cf3ec26afeb3" value="TOOL_WINDOW" />
      </map>
    </option>
    <option name="TAB_STATES">
      <map>
        <entry key="5711c39d-b7a4-4c9f-963f-cf3ec26afeb3">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="HEAD" />
                      </list>
                    </value>
                  </entry>
                  <entry key="roots">
                    <value>
                      <list>
                        <option value="$PROJECT_DIR$" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
              <option name="SHOW_ONLY_AFFECTED_CHANGES" value="true" />
            </State>
          </value>
        </entry>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="main" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <ignored-roots>
      <path value="$PROJECT_DIR$/.." />
    </ignored-roots>
    <MESSAGE value="上传" />
    <MESSAGE value="webhook fuck you" />
    <MESSAGE value="webhook" />
    <MESSAGE value="webhook构建jenkins 已完成" />
    <MESSAGE value="404修复" />
    <MESSAGE value="404修复1" />
    <MESSAGE value="修复全局变量" />
    <MESSAGE value="不识别纯文本消息" />
    <MESSAGE value="真慢啊" />
    <MESSAGE value="测试" />
    <MESSAGE value="最新代码" />
    <MESSAGE value="检验jenkins url" />
    <MESSAGE value="dddd" />
    <MESSAGE value="获取git分支" />
    <MESSAGE value="验证码识别真是日了狗了" />
    <MESSAGE value="selenium实现总后台登录" />
    <MESSAGE value="待实现获取cookies。。。" />
    <MESSAGE value="测试cookies" />
    <MESSAGE value="基于协程效验视图名，异步发送构建消息" />
    <MESSAGE value="正式测试视图插入数据库" />
    <MESSAGE value="根据关键字 进入对应生产测试函数" />
    <MESSAGE value="v1小版本更新" />
    <MESSAGE value="构建jenkins 稳定版 测试 正式 无参 有参" />
    <MESSAGE value="基于pipelirne 构建docker镜像" />
    <MESSAGE value="readme 更新" />
    <option name="LAST_COMMIT_MESSAGE" value="readme 更新" />
  </component>
  <component name="VgoProject">
    <environment>
      <map>
        <entry key="GPPROXY" value="https://goproxy.cn,direct" />
      </map>
    </environment>
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/test/GetJobStatusJK.go</url>
          <line>2</line>
          <option name="timeStamp" value="4" />
        </line-breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint type="DlvErrorBreakpoint" />
      </default-breakpoints>
    </breakpoint-manager>
  </component>
</project>